
name: Deploy to Production

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key for Azure VM
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}

      - name: Deploy to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.AZURE_VM_IP }} << 'EOF'
            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/presentify:latest

            # Stop and remove existing container
            docker stop presentify || true
            docker rm presentify || true

            # Create necessary directories
            mkdir -p /opt/presentify/data

            # Run the new container with proper configuration
            docker run -d \
              --name presentify \
              --restart unless-stopped \
              -p 3000:3000 \
              -v /opt/presentify/data:/usr/src/presentify/data \
              -e NODE_ENV=production \
              -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/presentify:latest

            # Wait for the application to start
            sleep 10

            # Check if the application is running
            if curl -s http://localhost:3000/api/health | grep -q "ok"; then
              echo "Deployment successful"
            else
              echo "Deployment failed - health check failed"
              exit 1
            fi
          EOF

      - name: Notify on Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '🚀 Deployment successful! The application is now live.'
            })

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '❌ Deployment failed! Please check the logs for more information.'
            })
